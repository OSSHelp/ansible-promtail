---
- name: create group
  group:
    name: "{{ promtail_user.group }}"
    state: present
    system: yes
  when: promtail_user.group != "root"

- name: create user
  user:
    name: "{{ promtail_user.user }}"
    group: "{{ promtail_user.group }}"
    groups: "{{ promtail_additional_groups }}"
    create_home: no
    home: /nonexist
    shell: "/bin/false"
    system: yes
  when: promtail_user.user != "root"

- name: ensure binary dir exists
  file:
    path: "{{ promtail_dirs.binary_dir }}"
    state: directory
    mode: 0755

- name: create directories
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: "{{ promtail_user.group }}"
    mode: 0770
  loop:
    - "{{ promtail_dirs.config_dir }}"
    - "{{ promtail_dirs.lib_dir }}"

- name: check if binary file exists
  stat:
    path: "{{ promtail_dirs.binary_dir }}/{{ promtail_binary_name }}"
  register: binary_file

- name: get binary version
  shell: "{{ promtail_dirs.binary_dir }}/{{ promtail_binary_name }} --version | head -1 | awk '{print $3}'"  # noqa 306
  register: binary_version
  changed_when: false
  when: binary_file.stat.exists and not ansible_check_mode

- name: register installation variable
  set_fact:
    promtail_binary_download_needed: true
  when: not binary_file.stat.exists
        or (binary_file.stat.exists and binary_version.stdout is defined and binary_version.stdout not in promtail_version)

- name: get/update binary
  block:
    - name: prepare tmp dir
      file:
        path: "{{ promtail_dirs.tmp_dir }}"
        state: directory
        mode: 0700

    - name: download archive
      get_url:
        url: "{{ promtail_download_url }}"
        dest: "{{ promtail_dirs.tmp_dir }}/promtail-{{ promtail_version }}.zip"
        checksum: "{{ promtail_download_sums }}"

    - name: install unzip
      apt:
        name: "unzip"
        update_cache: true
        cache_valid_time: 86400

    - name: extract binary
      unarchive:
        src: "{{ promtail_dirs.tmp_dir }}/promtail-{{ promtail_version }}.zip"
        dest: "{{ promtail_dirs.tmp_dir }}"
        owner: root
        group: "{{ promtail_user.group }}"
        mode: 0750
        remote_src: true

    - name: "move binary to {{ promtail_dirs.binary_dir }}"
      copy:
        remote_src: true
        src: "{{ promtail_dirs.tmp_dir }}/promtail-linux-amd64"
        dest: "{{ promtail_dirs.binary_dir }}/{{ promtail_binary_name }}"
        owner: root
        group: "{{ promtail_user.group }}"
        mode: 0750
      notify: restart promtail service

    - name: remove tmp dir
      file:
        path: "{{ promtail_dirs.tmp_dir }}/"
        state: absent
  when: promtail_binary_download_needed|default(false) and not ansible_check_mode

- name: create systemd unit
  template:
    src: promtail-systemd-unit.j2
    dest: "{{ promtail_systemd_unit }}"
  notify:
    - reload promtail unit
    - restart promtail service

- name: ensure that configuration directory exists
  file:
    path: "{{ promtail_dirs.config_dir }}"
    state: directory

- name: create main configuration file
  template:
    src: "{{ promtail_main_cfg_template }}"
    dest: "{{ promtail_dirs.config_dir }}/{{ promtail_config_file }}"
    owner: root
    group: "{{ promtail_user.group }}"
    mode: 0640
  notify: restart promtail service

- meta: flush_handlers

- name: enable service
  systemd:
    name: "{{ promtail_service_name }}"
    enabled: true
